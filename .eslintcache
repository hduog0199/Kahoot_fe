[{"C:\\WNC\\Clone_kahoot\\frontend\\src\\index.js":"1","C:\\WNC\\Clone_kahoot\\frontend\\src\\Component\\LoginRoom.js":"2","C:\\WNC\\Clone_kahoot\\frontend\\src\\Component\\Chosing_answer\\Chosing_answer.js":"3","C:\\WNC\\Clone_kahoot\\frontend\\src\\Component\\LoginName\\LoginName.js":"4","C:\\WNC\\Clone_kahoot\\frontend\\src\\Component\\Answer_Result\\Answer_Result.js":"5","C:\\WNC\\Clone_kahoot\\frontend\\src\\Component\\Chosing_Game\\Chosing_Game.js":"6","C:\\WNC\\Clone_kahoot\\frontend\\src\\Component\\Create_Game\\Create_Game.js":"7","C:\\WNC\\Clone_kahoot\\frontend\\src\\Component\\HostWaitRoom\\HostWaitRoom.js":"8","C:\\WNC\\Clone_kahoot\\frontend\\src\\Component\\Scoreboard\\Scoreboard.js":"9","C:\\WNC\\Clone_kahoot\\frontend\\src\\Component\\ClientWait\\ClientWait.js":"10","C:\\WNC\\Clone_kahoot\\frontend\\src\\Component\\Player_Choose\\Player_Choose.js":"11","C:\\WNC\\Clone_kahoot\\frontend\\src\\App.js":"12","C:\\WNC\\Clone_kahoot\\frontend\\src\\reportWebVitals.js":"13","C:\\WNC\\Clone_kahoot\\frontend\\src\\Component\\Create_Questions\\Create_Question.js":"14"},{"size":558,"mtime":1657705162715,"results":"15","hashOfConfig":"16"},{"size":2092,"mtime":1657705162707,"results":"17","hashOfConfig":"16"},{"size":5114,"mtime":1657705162693,"results":"18","hashOfConfig":"16"},{"size":1551,"mtime":1657705162706,"results":"19","hashOfConfig":"16"},{"size":7884,"mtime":1657705162688,"results":"20","hashOfConfig":"16"},{"size":2253,"mtime":1657705162691,"results":"21","hashOfConfig":"16"},{"size":3483,"mtime":1657705162698,"results":"22","hashOfConfig":"16"},{"size":4815,"mtime":1657705162703,"results":"23","hashOfConfig":"16"},{"size":4105,"mtime":1657705162711,"results":"24","hashOfConfig":"16"},{"size":6370,"mtime":1657705162695,"results":"25","hashOfConfig":"16"},{"size":1969,"mtime":1657705162709,"results":"26","hashOfConfig":"16"},{"size":1337,"mtime":1657705162685,"results":"27","hashOfConfig":"16"},{"size":375,"mtime":1657705162716,"results":"28","hashOfConfig":"16"},{"size":1836,"mtime":1657705162701,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"w41fe6",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\WNC\\Clone_kahoot\\frontend\\src\\index.js",[],["67","68"],"C:\\WNC\\Clone_kahoot\\frontend\\src\\Component\\LoginRoom.js",[],"C:\\WNC\\Clone_kahoot\\frontend\\src\\Component\\Chosing_answer\\Chosing_answer.js",["69","70","71","72","73","74","75"],"import React, {useState, useEffect} from 'react';\r\nimport './Chosing_answer.css';\r\nimport {  withRouter } from \"react-router-dom\";\r\nimport { \r\n    GrStatusWarningSmall, \r\n    GrStatusUnknownSmall,\r\n    GrStatusGoodSmall,\r\n    GrStatusCriticalSmall \r\n} from \"react-icons/gr\";\r\nimport io from \"socket.io-client\";\r\nconst ENDPOINT = \"http://localhost:4000\";\r\nconst socket = io(\r\n    ENDPOINT,\r\n    {\r\n    transports: ['websocket']\r\n  });\r\nfunction Chosing_answer(props){\r\n    const [quiz, setQuiz] = useState(props.location.state.data[0])\r\n    const[gamePin, setGamePin] = useState(props.location.state.data[2])\r\n    const [answer, setAnswer] = useState(0);\r\n    const [player, setPlayer] = useState(props.location.state.data[1]);\r\n    const [q, setQ] = useState(0);\r\n    const [counter, setCounter] = useState(15);\r\n    useEffect(() => {\r\n      setInterval(() => {\r\n        setCounter(counter => counter - 1);\r\n      }, 1000);\r\n      return () => {\r\n        clearInterval(counter);\r\n      };\r\n    },[]);\r\n    useEffect(() =>{\r\n        if(counter === 0){\r\n            const data = [quiz, player, gamePin]\r\n            socket.emit(\"Time_up\", q, quiz[q].correct, gamePin)\r\n            props.history.push({\r\n                pathname: '/Answer_Result',\r\n                search: `${q}`,\r\n                state: { data: data },\r\n            });\r\n        }\r\n    })\r\n      useEffect(() => {\r\n          console.log(props)\r\n          const q = props.location.search\r\n          const r = q.replace('?','');\r\n          console.log(\"chu:\", r)\r\n          setQ(Number(r))\r\n      }, [q]);\r\n     useEffect(() => {\r\n        socket.on(\"player_answer\", (data, game_Pin) => {\r\n            if(Number(game_Pin) === gamePin){\r\n                setAnswer(answer => answer + 1);\r\n            }\r\n        });\r\n      }, []);  \r\n      useEffect(() => {\r\n        socket.emit('join_Room', gamePin);\r\n    }, []); \r\n    return(\r\n        <div className=\"Container_Chosing_answer\">\r\n            <header className=\"blue section\">{quiz[q].question}</header>\r\n            <main className=\"coral section\">\r\n                <div className=\"Main_Header\">\r\n                    <div className=\"Main_Header_graph\">\r\n                        <div className=\"Main_Header_graph_display\">\r\n                        </div>\r\n                        <div className=\"Current_answer\">\r\n                            <div>\r\n                                <div>{answer}</div>\r\n                                <div>Answers</div>\r\n                            </div>\r\n                            <div className=\"Time_left\">\r\n                                {counter >= 0 ? counter : 0}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"Main_Bottom\">\r\n                    <div className=\"Answer_Option_1\">\r\n                        <div className=\"Answer_Icon\">\r\n                            <GrStatusWarningSmall className=\"display_icon\"/>\r\n                        </div>\r\n                        <div className=\"Answer_Content\">\r\n                            {quiz[q].answer_1}\r\n                        </div>\r\n                        <div className=\"Answer_XO\">\r\n                           \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"Answer_Option_2\">\r\n                        <div className=\"Answer_Icon\">\r\n                            <GrStatusUnknownSmall className=\"display_icon\"/>\r\n                        </div>\r\n                        <div className=\"Answer_Content\">\r\n                        {quiz[q].answer_2}\r\n                        </div>\r\n                        <div className=\"Answer_XO\">\r\n                        \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"Answer_Option_3\">\r\n                        <div className=\"Answer_Icon\">\r\n                            <GrStatusGoodSmall className=\"display_icon\"/>\r\n                        </div>\r\n                        <div className=\"Answer_Content\">\r\n                        {quiz[q].answer_3}\r\n                        </div>\r\n                        <div className=\"Answer_XO\">\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"Answer_Option_4\">\r\n                        <div className=\"Answer_Icon\">\r\n                            <GrStatusCriticalSmall className=\"display_icon\"/>\r\n                        </div>\r\n                        <div className=\"Answer_Content\">\r\n                        {quiz[q].answer_4}\r\n                        </div>\r\n                        <div className=\"Answer_XO\">\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n            <footer className=\"purple section\">\r\n                <div className=\"Current_Question\">{q + 1}/{quiz.length}</div>\r\n                <div className=\"Current_Question\">Game Pin: {gamePin}</div>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(Chosing_answer)\r\n","C:\\WNC\\Clone_kahoot\\frontend\\src\\Component\\LoginName\\LoginName.js",[],"C:\\WNC\\Clone_kahoot\\frontend\\src\\Component\\Answer_Result\\Answer_Result.js",["76","77","78","79","80","81","82"],"import React, {useState, useEffect} from 'react';\r\nimport './Answer_Result.css';\r\nimport {FaCheck, FaTimes} from \"react-icons/fa\";\r\nimport { \r\n    GrStatusWarningSmall, \r\n    GrStatusUnknownSmall,\r\n    GrStatusGoodSmall,\r\n    GrStatusCriticalSmall \r\n} from \"react-icons/gr\";\r\nimport {  withRouter } from \"react-router-dom\";\r\nimport { Socket } from 'socket.io-client';\r\nimport io from \"socket.io-client\";\r\nconst ENDPOINT = \"http://localhost:4000\";\r\nconst socket = io(\r\n    ENDPOINT,\r\n    {\r\n    transports: ['websocket']\r\n  });\r\nfunction Answer_Result(props){\r\n    const[quiz, setQuiz] = useState(props.location.state.data[0])\r\n    const [player, setPlayer] = useState(props.location.state.data[1])\r\n    const[gamePin, setGamePin] = useState(props.location.state.data[2])\r\n    const [q, setQ] = useState(0)\r\n    const [answer, setAnswer] = useState([0, 0, 0, 0])\r\n    useEffect(() => {\r\n        const q = props.location.search\r\n        const r = q.replace('?','');\r\n        console.log(\"chu:\", r)\r\n        setQ(Number(r))\r\n    }, [q]);\r\n    useEffect(() => {\r\n        socket.on(\"answer_summary\", (data, game_Pin) => {\r\n            if(Number(game_Pin) === gamePin){\r\n                setAnswer(data)\r\n                console.log(\"data\", data)\r\n                console.log(\"answer\", answer)\r\n            }\r\n        });\r\n        return () => {\r\n            setAnswer([0, 0, 0, 0]); \r\n          };\r\n    }, []); \r\n    const Nextquestion = () =>{\r\n        const data = [quiz, props.location.state.data[1], gamePin]\r\n        props.history.push({\r\n            pathname: '/Scoreboard',\r\n            search: `${q}`,\r\n            state: { data: data },\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        socket.emit('join_Room', gamePin);\r\n    }, []); \r\n    useEffect(() =>{\r\n        socket.emit('get_data', gamePin)\r\n    }, [])\r\n    return(\r\n        <div className=\"Container_Answer_Result\">\r\n            <header className=\"blue section\">{quiz[q].question}</header>\r\n            <main className=\"coral section\">\r\n                <div className=\"Main_Header\">\r\n                    <div className=\"Main_Header_graph\">\r\n                        <div className=\"Main_Header_graph_display\">\r\n                            <div className=\"Main_Header_graph_result\">\r\n                                <div>\r\n                                   <div className=\"graph_number_1\">{answer[0]}</div>\r\n                        <div className=\"Graph_show_1\" style={{height: `${answer[0] > 0 ? (answer[0]/player) * 80 : 5}%`}}></div>\r\n                                </div>\r\n                                <div>\r\n                                    <div className=\"graph_number_2\">{answer[1]}</div>\r\n                        <div className=\"Graph_show_2\" style={{height: `${answer[1] > 0 ? (answer[1]/player) * 80 : 5}%`}}></div>\r\n                                </div>\r\n                                <div>\r\n                                     <div className=\"graph_number_3\">{answer[2]}</div>\r\n                        <div className=\"Graph_show_3\" style={{height: `${answer[2] > 0 ? (answer[2]/player) * 80 : 5}%`}}></div>\r\n                                </div>\r\n                                <div>\r\n                                    <div className=\"graph_number_4\">{answer[3]}</div>\r\n                        <div className=\"Graph_show_4\" style={{height: `${answer[3] > 0 ? (answer[3]/player) * 80 : 5}%`}}></div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"Main_Header_graph_icon\">\r\n                                <div className=\"tam_1\">\r\n                                <GrStatusWarningSmall className=\"display_icon\"/>\r\n                                </div>\r\n                                <div className=\"tam_2\">\r\n                                <GrStatusUnknownSmall className=\"display_icon\"/>\r\n                                </div>\r\n                                <div className=\"tam_3\">\r\n                                <GrStatusGoodSmall className=\"display_icon\"/> \r\n                                </div>\r\n                                <div className=\"tam_4\">\r\n                                <GrStatusCriticalSmall className=\"display_icon\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"Next_Button\" onClick={() => {Nextquestion()}}>\r\n                            Next\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"Main_Header_endgame\">\r\n                        <div className=\"End_Game\"onClick={() => Socket.emit(\"in danh sach\")}>End Game</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"Main_Bottom\">\r\n                    <div className=\"Answer_Option_1\" style={ Number(quiz[q].correct) === 1  ? {opacity:1} : {opacity:0.25}}>\r\n                        <div className=\"Answer_Icon\">\r\n                            <GrStatusWarningSmall className=\"display_icon\"/>\r\n                        </div>\r\n                        <div className=\"Answer_Content\">\r\n                            {quiz[q].answer_1}\r\n                        </div>\r\n                        <div className=\"Answer_XO\">\r\n                        {Number(quiz[q].correct) === 1 ? <FaCheck className=\"display_chose_result\"/> : <FaTimes className=\"display_chose_result\"/>}    \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"Answer_Option_2\" style={ Number(quiz[q].correct) ===2  ? {opacity:1} : {opacity:0.25}}>\r\n                        <div className=\"Answer_Icon\">\r\n                            <GrStatusUnknownSmall className=\"display_icon\"/>\r\n                        </div>\r\n                        <div className=\"Answer_Content\">\r\n                            {quiz[q].answer_2}\r\n                        </div>\r\n                        <div className=\"Answer_XO\">\r\n                        {Number(quiz[q].correct) === 2 ? <FaCheck className=\"display_chose_result\"/> : <FaTimes className=\"display_chose_result\"/>} \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"Answer_Option_3\" style={ Number(quiz[q].correct) === 3  ? {opacity:1} : {opacity:0.25}}>\r\n                        <div className=\"Answer_Icon\">\r\n                            <GrStatusGoodSmall className=\"display_icon\"/>\r\n                        </div>\r\n                        <div className=\"Answer_Content\">\r\n                            {quiz[q].answer_3}\r\n                        </div>\r\n                        <div className=\"Answer_XO\">\r\n                        {Number(quiz[q].correct) === 3 ? <FaCheck className=\"display_chose_result\"/> : <FaTimes className=\"display_chose_result\"/>} \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"Answer_Option_4\" style={ Number(quiz[q].correct) === 4  ? {opacity:1} : {opacity:0.25}}>\r\n                        <div className=\"Answer_Icon\">\r\n                            <GrStatusCriticalSmall className=\"display_icon\"/>\r\n                        </div>\r\n                        <div className=\"Answer_Content\">\r\n                            {quiz[q].answer_4}\r\n                        </div>\r\n                        <div className=\"Answer_XO\">\r\n                        {Number(quiz[q].correct) === 4 ? <FaCheck className=\"display_chose_result\"/> : <FaTimes className=\"display_chose_result\"/>} \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n            <footer className=\"purple section\">\r\n                <div className=\"Current_Question\">{q + 1}/{quiz.length}</div>\r\n                <div className=\"Current_Question\">Game Pin: {gamePin}</div>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(Answer_Result)\r\n","C:\\WNC\\Clone_kahoot\\frontend\\src\\Component\\Chosing_Game\\Chosing_Game.js",["83","84","85","86","87"],"import React, {useState, useEffect} from 'react'\r\nimport './Chosing_Game.css'\r\nimport io from \"socket.io-client\";\r\nimport {  withRouter } from \"react-router-dom\";\r\nconst ENDPOINT = \"http://localhost:4000\";\r\nconst socket = io(\r\n    ENDPOINT,\r\n    {\r\n    transports: ['websocket']\r\n  });\r\nfunction Chosing_Game(props) {\r\n    const [listQuiz, setListQuiz] = useState([]);\r\n    const fetchQuiz = async () => {\r\n        const response = await fetch(\r\n            'http://localhost:4000/quiz/sync'\r\n          );\r\n        const jsonData = await response.json()\r\n        console.log(\"list quiz\", jsonData)\r\n        setListQuiz(jsonData)\r\n      };\r\n    const startGame = (data) =>{\r\n      socket.emit('check_Id', data, function(message){\r\n        if(message){\r\n          socket.emit('Host_Join', data)\r\n          console.log(\"data truyen host_join\", data)\r\n        }\r\n        else{\r\n          console.log(\"xin chon cau khac\")\r\n        }\r\n    });\r\n    }\r\n    useEffect(() => {\r\n      socket.on(\"ok\", (gamePin, id_quiz) => {\r\n          const Pin = [id_quiz, gamePin]\r\n          console.log(\"id_quiz\", id_quiz)\r\n          props.history.push({\r\n            pathname: '/HostWaitRoom',\r\n            state: { data: Pin }\r\n        });\r\n  });\r\n  }, []); \r\n    useEffect(() => {\r\n        fetchQuiz();\r\n      }, []);\r\n    useEffect(() => {\r\n        socket.on(\"newquiz\", quiz => {\r\n          console.log(quiz)\r\n          setListQuiz({...listQuiz, quiz:{quiz}});\r\n          console.log(listQuiz)\r\n        });\r\n      }, []); \r\n      const reformattedArray = () => {\r\n        const rObj = {}\r\n        listQuiz.map(obj => {\r\n          console.log(obj.quiz.name)\r\n        })\r\n        console.log(rObj)\r\n      }\r\n    return (\r\n        <>\r\n            <a id=\"back\" href=\"../\">Back</a>\r\n            <h1 id=\"title\">Start a Kahoot Game</h1>\r\n            <h4 id=\"subtitle\">Choose a Game Below or <a id=\"link\" onClick={() => {props.history.push({pathname: '/Create_Game'})}}>Create your Own!</a></h4>\r\n            <div id=\"game-list\">\r\n            {listQuiz.map((obj, i) => {\r\n              return <div onClick={() => startGame(obj._id) } id=\"title\" key={i}>{obj.quiz.quiz_name}</div>;\r\n            })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default withRouter(Chosing_Game)","C:\\WNC\\Clone_kahoot\\frontend\\src\\Component\\Create_Game\\Create_Game.js",["88","89","90"],"import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport './Create_Game.css';\r\nimport io from \"socket.io-client\";\r\nimport {  withRouter } from \"react-router-dom\";\r\nimport Create_Question from '../Create_Questions/Create_Question';\r\nconst socket = io();\r\nfunction Create_Game(props) {\r\n    const [question_array, setQuestion_array] = useState([0])\r\n    const [questions, setQuestions] = useState([{\r\n        question: '',\r\n        answer_1: '',\r\n        answer_2: '',\r\n        answer_3: '',\r\n        answer_4: '',\r\n        correct: 0,\r\n    }])\r\n    const [test, setTest] = useState({\r\n        question: '',\r\n        answer_1: '',\r\n        answer_2: '',\r\n        answer_3: '',\r\n        answer_4: '',\r\n        correct: 0,\r\n    })\r\n    const [quiz, setQuiz] = useState({\r\n        quiz_name: '',\r\n        question: []\r\n    })\r\n    const addQuestion = () =>{\r\n        setQuestion_array([...question_array, question_array.length]);\r\n        setQuestions([...questions, test])\r\n    }\r\n    const handleChange = (index, property, value) => {\r\n        // 1. Make a shallow copy of the items\r\n        const newquestions = [...questions];\r\n        // 2. Make a shallow copy of the item you want to mutate\r\n        const question = {...questions[index]};\r\n        // 3. Replace the property you're intested in\r\n        question[property] = value;\r\n        // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n        newquestions[index] = question;\r\n        // 5. Set the state to our new copy\r\n        setQuestions(newquestions)\r\n    }\r\n    const quiz_nameChange = e => {\r\n        const { name, value } = e.target;\r\n        setQuiz(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n    };\r\n    const sendquiz = async() => {\r\n        const update = {...quiz,  question: questions}\r\n        console.log(\"quiz sau khi gui\", update)\r\n        axios.post(\"http://localhost:4000/quiz/new\", {\r\n            quiz: update\r\n        }).then(console.log(\"gui thanh cong\"));\r\n    }\r\n    return (\r\n        <>\r\n            <h1 className=\"title\">Quiz Creator Studio</h1>  \r\n            <div className=\"form-field\">\r\n                <label className=\"quizTitle\">Quiz Title</label>\r\n                <input className=\"name\" value={quiz.quiz_name} name={'quiz_name'} type=\"text\" onChange={quiz_nameChange}/>\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div className=\"allQuestions\">\r\n                {question_array.map((c,i) => \r\n                    <Create_Question \r\n                    handleChange={handleChange}\r\n                    key={i}\r\n                    categoryIndex={i}\r\n                    question = {c.question}\r\n                    answer_1 = {c.answer_1}\r\n                    answer_2 = {c.answer_2}\r\n                    answer_3 = {c.answer_3}\r\n                    answer_4 = {c.answer_4}\r\n                    correct = {c.correct}\r\n                    />)\r\n                }\r\n            </div>\r\n            <br />\r\n            <button onClick={addQuestion}>Add another question</button>\r\n            <br />\r\n            <br />\r\n            <div className=\"form-field\">\r\n                <button onClick={() => sendquiz()}>Create Quiz</button>\r\n            </div>\r\n            <br />\r\n            <button onClick={() => props.history.goBack()}>Cancel quiz and return to quiz selection</button>\r\n        </>\r\n    )\r\n}\r\nexport default withRouter(Create_Game)","C:\\WNC\\Clone_kahoot\\frontend\\src\\Component\\HostWaitRoom\\HostWaitRoom.js",["91","92","93","94"],"import React, {useEffect, useState} from 'react';\r\nimport './HostWaitRoom.css';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { FaUserAlt } from \"react-icons/fa\";\r\nimport io from \"socket.io-client\";\r\nconst ENDPOINT = \"http://localhost:4000\";\r\nconst socket = io(\r\n    ENDPOINT,\r\n    {\r\n    transports: ['websocket']\r\n  });\r\nfunction HostWaitRoom(props){\r\n    const [isLock, setIsLock] = useState(true)\r\n    const[gamePin, setGamePin] = useState(props.location.state.data[1])\r\n    const [listPlayer, setListPlayer] = useState([]);\r\n    // const [date, setDate] = useDate(new Date())\r\n    const [quiz, setQuiz] = useState([])\r\n    const startGame = () => {\r\n        const data = [quiz, listPlayer.length, gamePin]\r\n        const date = new Date()\r\n        const start_time = date.getTime()\r\n        console.log(\"quiz truyen\", quiz)\r\n        props.history.push({\r\n            pathname: '/Chosing_answer',\r\n            search: '0',\r\n            state: { data: data}\r\n        });\r\n        socket.emit(\"start_game\", gamePin, start_time)\r\n    } \r\n    const fetchQuiz = async (id) => {\r\n        if(id !== undefined){\r\n        const response = await fetch(\r\n            `http://localhost:4000/quiz/sync/${id}`\r\n        );\r\n        const jsonData = await response.json()\r\n        const temp = jsonData[0].quiz.question\r\n        console.log(\"test\", temp)\r\n        setQuiz(jsonData[0].quiz.question)\r\n        socket.emit(\"room_quiz\", temp, gamePin)\r\n        }\r\n        else{\r\n            console.log('sai id')\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        socket.on(\"add_player\", (game_pin, player) => {\r\n            if(game_pin === gamePin){\r\n                const list_player = player.filter(obj => obj.gamePin === gamePin);\r\n                console.log(list_player)\r\n                setListPlayer(list_player)\r\n            }\r\n    });\r\n    }, [listPlayer]); \r\n    useEffect(() => {\r\n            socket.emit('create_Room', gamePin);\r\n    }, []); \r\n    useEffect(async () => {\r\n        async function fetchData() {\r\n        await  socket.on(\"id\", (gamePin) => {\r\n            setGamePin(gamePin);\r\n            setIsLock(false)\r\n        });\r\n        }\r\n        await fetchData();\r\n        fetchQuiz(props.location.state.data[0]);\r\n        console.log(\"props.state\", props.location.state.data[0])\r\n      }, []);\r\n    return(\r\n        <div className=\"Container_HostWaitRoom\">\r\n        <div className=\"display_header\">\r\n            <div className=\"display_header_container\">\r\n                <div className=\"header_style_GamePin\">\r\n                    <div>\r\n                        <span className=\"header_text\">Game</span>\r\n                        <span>{isLock ? \"Loading ...\" : \"Pin:\"}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"header_style_GamePin_Number\">\r\n                    { isLock \r\n                        ? \r\n                        <div></div>\r\n                        :\r\n                        <div>\r\n                            <span className=\"header_text\">{~~(gamePin/10000)}</span>\r\n                            <span>{gamePin%10000}</span>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"display_status\">\r\n            <div className=\"status_number\">\r\n                <span className=\"header_text\">\r\n                    <FaUserAlt className=\"status_user\"/>\r\n                </span>\r\n                <span className=\"header_number\">\r\n                    {listPlayer.length}\r\n                </span>\r\n            </div>\r\n            <div className=\"status_option\">\r\n                {/* <button className=\"Login_Lock\" onClick={Lock_click}>\r\n                    <span className=\"Lock_icon\">\r\n                        {isLock ? <FaLock /> : <FaUnlock />}\r\n                    </span>\r\n                </button> */}\r\n                <button className={listPlayer.length < 1 ? \"Game_start_fails\" : \"Game_start\"} disabled={listPlayer.length < 1} onClick={() => {startGame()}} >\r\n                    <span className=\"start_status\">\r\n                        Start\r\n                    </span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div className=\"display_section\">\r\n            <div className=\"display_center_Host\">    \r\n            {\r\n                listPlayer.length > 0 \r\n                ? \r\n                <ul className=\"WaitingMessage\">\r\n                    {listPlayer.map((obj, i) => {\r\n                         return <li className=\"title_li\" key={i}>{obj.Name}</li>;\r\n                    })}\r\n                </ul>\r\n                :\r\n                <div className=\"title_li\">Waiting for player ...</div>\r\n            }\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(HostWaitRoom)","C:\\WNC\\Clone_kahoot\\frontend\\src\\Component\\Scoreboard\\Scoreboard.js",["95","96","97","98","99"],"import React, {useState, useEffect} from 'react';\r\nimport './Scoreboard.css';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport io from \"socket.io-client\";\r\nconst ENDPOINT = \"http://localhost:4000\";\r\nconst socket = io(\r\n    ENDPOINT,\r\n    {\r\n    transports: ['websocket']\r\n  });\r\nfunction Scoreboard(props){\r\n    const[quiz, setQuiz] = useState(props.location.state.data[0])\r\n    const[gamePin, setGamePin] = useState(props.location.state.data[2])\r\n    const [player, setPlayer] = useState([{ten: \"loading\", diem: 0}])\r\n    // const [date, setDate] = useState(new Date())\r\n    const [q, setQ] = useState(0)\r\n    const size = 3;\r\n    useEffect(() => {\r\n        const q = props.location.search\r\n        const r = q.replace('?','');\r\n        console.log(\"chu:\", r)\r\n        setQ(Number(r))\r\n    }, [q]); \r\n    const Nextquestion = () =>{\r\n        const data = [quiz, props.location.state.data[1], gamePin]\r\n        const date = new Date()\r\n        const start_time = date.getTime()\r\n        console.log(typeof(quiz.length))\r\n        console.log(typeof(q))\r\n        console.log(\"so q\", q)\r\n        console.log(\"quiz\", quiz.length)\r\n        console.log(q+1 < quiz.length)\r\n        if(q + 1 < quiz.length){\r\n            props.history.push({\r\n                pathname: '/Chosing_answer',\r\n                search: `${q + 1}`,\r\n                state: { data: data },\r\n            });\r\n            socket.emit(\"start_game\", gamePin, start_time)\r\n        }\r\n        else{\r\n            props.history.push({pathname: '/ChosingGame'})\r\n            socket.emit(\"end_game\", gamePin)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        socket.emit('sort_player', gamePin);\r\n    }, []); \r\n    useEffect(() =>{\r\n        socket.on('sort_player_result', (player, game_Pin) => {\r\n            console.log(\"type of state\", typeof(gamePin))\r\n            console.log(\"type of truyen\", typeof(game_Pin))\r\n            if(Number(game_Pin) === gamePin){\r\n                setPlayer(player)\r\n                console.log(\"data\", player)\r\n            }\r\n        })\r\n    }, [player])\r\n    return(\r\n        <div className=\"Container_ClientWait\">\r\n            <header className=\"ScoreBoard_title\"><h3>Score Board</h3></header>\r\n            <div className=\"display_score_board\">\r\n                <button className=\"Next_Button\" onClick={() => {Nextquestion()}}>\r\n                    Next\r\n                </button>\r\n                <div className=\"display_score_center\">    \r\n                        {/* {player.map((obj, i) => {\r\n                            return  <div  className=\"score\" key={i} style={i === 0 ? {backgroundColor: 'white', color: 'black'} : {}}>\r\n                                        <h1>{obj.Name}</h1>\r\n                                        <h1>{obj.score}</h1>\r\n                                    </div>;\r\n                        })} */}\r\n                        {\r\n                            player.slice(0, size).map((obj,i) => {\r\n                                return  <div  className=\"score\" key={i} style={i === 0 ? {backgroundColor: 'white', color: 'black'} : {}}>\r\n                                    <h1>{obj.Name}</h1>\r\n                                    <h1>{obj.score}</h1>\r\n                                </div>;\r\n                        })}\r\n                        {/* {\r\n                            player.slice(0, size).map((obj,i) => {\r\n                                return  <div  className=\"score\" key={i} style={i === 0 ? {backgroundColor: 'white', color: 'black'} : {}}>\r\n                                            <h1>{obj.Name}</h1>\r\n                                            <h1>{obj.score}</h1>\r\n                                        </div>;\r\n                            }\r\n                        })} */}\r\n                </div> \r\n            </div>\r\n            <div className=\"display_info\">\r\n                <div>\r\n                    <h1>{q + 1}/{quiz.length}</h1>\r\n                </div>\r\n                <div>\r\n                    <h1>Game Pin: {gamePin}</h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(Scoreboard)","C:\\WNC\\Clone_kahoot\\frontend\\src\\Component\\ClientWait\\ClientWait.js",["100","101","102","103","104","105","106","107","108","109","110","111"],"import React, {useState, useEffect} from 'react';\r\nimport './ClientWait.css';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Player_Choose from '../Player_Choose/Player_Choose'\r\nimport io from \"socket.io-client\";\r\nconst ENDPOINT = \"http://localhost:4000\";\r\nconst socket = io(\r\n    ENDPOINT,\r\n    {\r\n    transports: ['websocket']\r\n  });\r\nfunction ClientWait(props){\r\n    const [status, setStatus] = useState(0)\r\n    const [current, setCurrent] = useState(0)\r\n    const [date, setDate] = useState(new Date())\r\n    const[gamePin, setGamePin] = useState(props.location.state.data[2])\r\n    const [socket_id, setSocket_id] = useState(props.location.state.data[1])\r\n    const [score, setScore] = useState(0)\r\n    const [point, setPoint] = useState(0)\r\n    const [position, setPosition] = useState(0)\r\n    const [timeUp, setTimeUp] = useState(false)\r\n    const [correct, setCorrect] = useState(false)\r\n    const[display, setDisplay] = useState(false)\r\n    const handleClick = () => {\r\n        setStatus(-1)\r\n    }\r\n    useEffect(() => {\r\n        socket.on(\"answer_result\", (q) => {\r\n            setCurrent(q)\r\n        });\r\n    }, []); \r\n        // Time : {date.toLocaleTimeString()}\r\n    useEffect(() => {\r\n        socket.emit(\"send_id\", props.location.state.data[1])\r\n        console.log(\"gamepin\", props.location.state.data[2])\r\n        console.log(\"socket id\", props.location.state.data[1])\r\n    }, []); \r\n    useEffect(() => {\r\n        socket.on(\"get_score\", (score, point) => {\r\n            setScore(score);\r\n            setPoint(point);\r\n            setTimeUp(true);\r\n            setCorrect(point > 0)\r\n            console.log(\"score\", score)\r\n            console.log(\"point\", point)\r\n        });\r\n    }, [score, point]);\r\n    useEffect(() => {\r\n        const pin = Number(gamePin)\r\n        socket.emit('join_Room', pin);\r\n        console.log(\"joining\")\r\n        console.log(\"ma room\", gamePin)\r\n    }, []);  \r\n    useEffect(() => {\r\n        socket.on('dc_chua' , () =>{\r\n            console.log(\"join thanh cong\")\r\n        });\r\n    }, []);  \r\n    useEffect(() => {\r\n        socket.on('player_position' , (index) =>{\r\n            setPosition(index)\r\n            setDisplay(true)\r\n        });\r\n    }, [position]); \r\n    useEffect(() => {\r\n        socket.on('startGame', (game_Pin) => {\r\n            if(Number(gamePin) === game_Pin){\r\n                console.log(\"bat dau tra loi\")\r\n                setStatus(1)\r\n                setStatus(1)\r\n                setCorrect(false)\r\n                setTimeUp(false)\r\n                setDisplay(false)\r\n            }\r\n        });\r\n    }, []);  \r\n    useEffect(() => {\r\n        socket.on('new_room', (game_Pin) => {\r\n            console.log(\"new\")\r\n            console.log(\"gamePin\", gamePin)\r\n            console.log(\"game_Pin\", game_Pin)\r\n            if(Number(gamePin) === game_Pin){\r\n                props.history.push({\r\n                    pathname: '/',\r\n                });\r\n            }\r\n        });\r\n    }, []);\r\n    return(\r\n        <div className=\"Container_ClientWait\">\r\n            <div className=\"display_score\">\r\n                {\r\n                    status === 0 \r\n                    ? \r\n                        <div className=\"display_center\">    \r\n                            <div>\r\n                                <h1 className=\"title\">You're in !</h1>\r\n                                <h3 className=\"title_footer\">See your nickname on screen ?</h3>\r\n                            </div>\r\n                        </div> \r\n                    :\r\n                    (\r\n                        status  > 0 \r\n                        ? \r\n                            <Player_Choose onShowClick={()=>{handleClick()}} data ={socket_id} gamePin = {gamePin}/> \r\n                        :\r\n                        (\r\n                            timeUp \r\n                            ?    \r\n                            (\r\n                                correct\r\n                                ?\r\n                                    <div className=\"display_center\" style={{width: '50%'}}>    \r\n                                        <div style={{width: '50%'}}>\r\n                                            <h1 className=\"title\">Chính xác !!! + {point} điểm</h1>\r\n                                            {\r\n                                                display \r\n                                                ? \r\n                                                <h3 className=\"title_footer\">Bạn xếp thứ {position + 1}</h3> \r\n                                                :\r\n                                                <h3></h3>\r\n                                            }\r\n                                        </div>\r\n                                    </div> \r\n                                :\r\n                                    <div className=\"display_center\">    \r\n                                        <div>\r\n                                            <h1 className=\"title\">Sai</h1>\r\n                                            {\r\n                                                display \r\n                                                ? \r\n                                                <h3 className=\"title_footer\">Bạn xếp thứ {position + 1}</h3> \r\n                                                :\r\n                                                <h3></h3>\r\n                                            }\r\n                                        </div>\r\n                                    </div> \r\n                            )\r\n                            :\r\n                                <div className=\"display_center\">    \r\n                                    <div>\r\n                                        <h1 className=\"title\">Đợi một chút !!!</h1>\r\n                                    </div>\r\n                                </div> \r\n                        )\r\n                    )\r\n                        \r\n                }\r\n            </div>\r\n            <div className=\"display_info\">\r\n                <div>\r\n                    <h1>{props.location.state.data[0]}</h1>\r\n                </div>\r\n                <div style={{backgroundColor: \"#1d1d1d\", color: \"#ffffff\", padding: \"5px 15px\"}}>\r\n                    <h1>{score}</h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(ClientWait)","C:\\WNC\\Clone_kahoot\\frontend\\src\\Component\\Player_Choose\\Player_Choose.js",["112"],"import React, {useState} from 'react';\r\nimport './Player_Choose.css';\r\nimport {  withRouter } from \"react-router-dom\";\r\nimport { \r\n    GrStatusWarningSmall, \r\n    GrStatusUnknownSmall,\r\n    GrStatusGoodSmall,\r\n    GrStatusCriticalSmall \r\n} from \"react-icons/gr\";\r\nimport io from \"socket.io-client\";\r\nconst ENDPOINT = \"http://localhost:4000\";\r\nconst socket = io(\r\n    ENDPOINT,\r\n    {\r\n    transports: ['websocket']\r\n  });\r\nfunction Player_Choose(props){\r\n    const answer = (i) =>{\r\n        const date = new Date()\r\n        const chose_time = date.getTime()\r\n        socket.emit('Choose_Answer', i, props.data, props.gamePin, chose_time);\r\n    }\r\n    return(\r\n        <div className=\"Container\">\r\n            <div className=\"Main\">\r\n                <div className=\"Pl_Answer_Option_1\" onClick={() => { props.onShowClick(); answer(1);}}>\r\n                    <div className=\"Pl_Answer_Icon\">\r\n                        <GrStatusWarningSmall className=\"Pl_display_icon\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"Pl_Answer_Option_2\" onClick={() => { props.onShowClick(); answer(2);}}>\r\n                    <div className=\"Pl_Answer_Icon\">\r\n                        <GrStatusUnknownSmall className=\"Pl_display_icon\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"Pl_Answer_Option_3\" onClick={() => { props.onShowClick(); answer(3);}}>\r\n                    <div className=\"Pl_Answer_Icon\">\r\n                        <GrStatusGoodSmall className=\"Pl_display_icon\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"Pl_Answer_Option_4\" onClick={() => { props.onShowClick(); answer(4);}}>\r\n                    <div className=\"Pl_Answer_Icon\">\r\n                        <GrStatusCriticalSmall className=\"Pl_display_icon\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(Player_Choose)","C:\\WNC\\Clone_kahoot\\frontend\\src\\App.js",[],"C:\\WNC\\Clone_kahoot\\frontend\\src\\reportWebVitals.js",[],"C:\\WNC\\Clone_kahoot\\frontend\\src\\Component\\Create_Questions\\Create_Question.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":18,"column":18,"nodeType":"119","messageId":"120","endLine":18,"endColumn":25},{"ruleId":"117","severity":1,"message":"121","line":19,"column":20,"nodeType":"119","messageId":"120","endLine":19,"endColumn":30},{"ruleId":"117","severity":1,"message":"122","line":21,"column":20,"nodeType":"119","messageId":"120","endLine":21,"endColumn":29},{"ruleId":"123","severity":1,"message":"124","line":31,"column":7,"nodeType":"125","endLine":31,"endColumn":9,"suggestions":"126"},{"ruleId":"123","severity":1,"message":"127","line":49,"column":10,"nodeType":"125","endLine":49,"endColumn":13,"suggestions":"128"},{"ruleId":"123","severity":1,"message":"129","line":56,"column":10,"nodeType":"125","endLine":56,"endColumn":12,"suggestions":"130"},{"ruleId":"123","severity":1,"message":"129","line":59,"column":8,"nodeType":"125","endLine":59,"endColumn":10,"suggestions":"131"},{"ruleId":"117","severity":1,"message":"118","line":20,"column":17,"nodeType":"119","messageId":"120","endLine":20,"endColumn":24},{"ruleId":"117","severity":1,"message":"122","line":21,"column":20,"nodeType":"119","messageId":"120","endLine":21,"endColumn":29},{"ruleId":"117","severity":1,"message":"121","line":22,"column":20,"nodeType":"119","messageId":"120","endLine":22,"endColumn":30},{"ruleId":"123","severity":1,"message":"132","line":30,"column":8,"nodeType":"125","endLine":30,"endColumn":11,"suggestions":"133"},{"ruleId":"123","severity":1,"message":"134","line":42,"column":8,"nodeType":"125","endLine":42,"endColumn":10,"suggestions":"135"},{"ruleId":"123","severity":1,"message":"129","line":53,"column":8,"nodeType":"125","endLine":53,"endColumn":10,"suggestions":"136"},{"ruleId":"123","severity":1,"message":"129","line":56,"column":8,"nodeType":"125","endLine":56,"endColumn":10,"suggestions":"137"},{"ruleId":"123","severity":1,"message":"138","line":41,"column":6,"nodeType":"125","endLine":41,"endColumn":8,"suggestions":"139"},{"ruleId":"123","severity":1,"message":"140","line":51,"column":10,"nodeType":"125","endLine":51,"endColumn":12,"suggestions":"141"},{"ruleId":"117","severity":1,"message":"142","line":52,"column":13,"nodeType":"119","messageId":"120","endLine":52,"endColumn":29},{"ruleId":"143","severity":1,"message":"144","line":54,"column":26,"nodeType":"145","messageId":"146","endLine":54,"endColumn":28},{"ruleId":"147","severity":1,"message":"148","line":63,"column":54,"nodeType":"149","endLine":63,"endColumn":132},{"ruleId":"117","severity":1,"message":"150","line":7,"column":7,"nodeType":"119","messageId":"120","endLine":7,"endColumn":13},{"ruleId":"117","severity":1,"message":"151","line":18,"column":18,"nodeType":"119","messageId":"120","endLine":18,"endColumn":25},{"ruleId":"152","severity":1,"message":"153","line":71,"column":21,"nodeType":"149","endLine":81,"endColumn":23},{"ruleId":"123","severity":1,"message":"129","line":53,"column":8,"nodeType":"125","endLine":53,"endColumn":20,"suggestions":"154"},{"ruleId":"123","severity":1,"message":"129","line":56,"column":8,"nodeType":"125","endLine":56,"endColumn":10,"suggestions":"155"},{"ruleId":"123","severity":1,"message":"156","line":57,"column":15,"nodeType":"145","endLine":67,"endColumn":8},{"ruleId":"123","severity":1,"message":"157","line":67,"column":10,"nodeType":"125","endLine":67,"endColumn":12,"suggestions":"158"},{"ruleId":"117","severity":1,"message":"118","line":12,"column":17,"nodeType":"119","messageId":"120","endLine":12,"endColumn":24},{"ruleId":"117","severity":1,"message":"121","line":13,"column":20,"nodeType":"119","messageId":"120","endLine":13,"endColumn":30},{"ruleId":"123","severity":1,"message":"132","line":23,"column":8,"nodeType":"125","endLine":23,"endColumn":11,"suggestions":"159"},{"ruleId":"123","severity":1,"message":"129","line":48,"column":8,"nodeType":"125","endLine":48,"endColumn":10,"suggestions":"160"},{"ruleId":"123","severity":1,"message":"129","line":58,"column":8,"nodeType":"125","endLine":58,"endColumn":16,"suggestions":"161"},{"ruleId":"117","severity":1,"message":"162","line":14,"column":12,"nodeType":"119","messageId":"120","endLine":14,"endColumn":19},{"ruleId":"117","severity":1,"message":"163","line":15,"column":12,"nodeType":"119","messageId":"120","endLine":15,"endColumn":16},{"ruleId":"117","severity":1,"message":"164","line":15,"column":18,"nodeType":"119","messageId":"120","endLine":15,"endColumn":25},{"ruleId":"117","severity":1,"message":"121","line":16,"column":20,"nodeType":"119","messageId":"120","endLine":16,"endColumn":30},{"ruleId":"117","severity":1,"message":"165","line":17,"column":23,"nodeType":"119","messageId":"120","endLine":17,"endColumn":35},{"ruleId":"123","severity":1,"message":"166","line":37,"column":8,"nodeType":"125","endLine":37,"endColumn":10,"suggestions":"167"},{"ruleId":"123","severity":1,"message":"129","line":53,"column":8,"nodeType":"125","endLine":53,"endColumn":10,"suggestions":"168"},{"ruleId":"123","severity":1,"message":"129","line":76,"column":8,"nodeType":"125","endLine":76,"endColumn":10,"suggestions":"169"},{"ruleId":"123","severity":1,"message":"170","line":88,"column":8,"nodeType":"125","endLine":88,"endColumn":10,"suggestions":"171"},{"ruleId":"152","severity":1,"message":"172","line":105,"column":29,"nodeType":"149","endLine":105,"endColumn":117},{"ruleId":"173","severity":1,"message":"174","line":121,"column":49,"nodeType":"149","endLine":121,"endColumn":53},{"ruleId":"173","severity":1,"message":"174","line":134,"column":49,"nodeType":"149","endLine":134,"endColumn":53},{"ruleId":"117","severity":1,"message":"175","line":1,"column":16,"nodeType":"119","messageId":"120","endLine":1,"endColumn":24},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"no-unused-vars","'setQuiz' is assigned a value but never used.","Identifier","unusedVar","'setGamePin' is assigned a value but never used.","'setPlayer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'counter'. Either include it or remove the dependency array.","ArrayExpression",["178"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["179"],"React Hook useEffect has a missing dependency: 'gamePin'. Either include it or remove the dependency array.",["180"],["181"],"React Hook useEffect has a missing dependency: 'props.location.search'. Either include it or remove the dependency array.",["182"],"React Hook useEffect has missing dependencies: 'answer' and 'gamePin'. Either include them or remove the dependency array.",["183"],["184"],["185"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["186"],"React Hook useEffect has a missing dependency: 'listQuiz'. Either include it or remove the dependency array. You can also do a functional update 'setListQuiz(l => ...)' if you only need 'listQuiz' in the 'setListQuiz' call.",["187"],"'reformattedArray' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'socket' is assigned a value but never used.","'setTest' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Create_Question must be in PascalCase or SCREAMING_SNAKE_CASE",["188"],["189"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has missing dependencies: 'fetchQuiz' and 'props.location.state.data'. Either include them or remove the dependency array.",["190"],["191"],["192"],["193"],"'current' is assigned a value but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'setSocket_id' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.location.state.data'. Either include it or remove the dependency array.",["194"],["195"],["196"],"React Hook useEffect has missing dependencies: 'gamePin' and 'props.history'. Either include them or remove the dependency array.",["197"],"Imported JSX component Player_Choose must be in PascalCase or SCREAMING_SNAKE_CASE","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"202","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"202","fix":"209"},{"desc":"202","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"202","fix":"217"},{"desc":"218","fix":"219"},{"desc":"205","fix":"220"},{"desc":"202","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"202","fix":"226"},{"desc":"202","fix":"227"},{"desc":"228","fix":"229"},"Update the dependencies array to be: [counter]",{"range":"230","text":"231"},"Update the dependencies array to be: [props, q]",{"range":"232","text":"233"},"Update the dependencies array to be: [gamePin]",{"range":"234","text":"235"},{"range":"236","text":"235"},"Update the dependencies array to be: [props.location.search, q]",{"range":"237","text":"238"},"Update the dependencies array to be: [answer, gamePin]",{"range":"239","text":"240"},{"range":"241","text":"235"},{"range":"242","text":"235"},"Update the dependencies array to be: [props.history]",{"range":"243","text":"244"},"Update the dependencies array to be: [listQuiz]",{"range":"245","text":"246"},"Update the dependencies array to be: [gamePin, listPlayer]",{"range":"247","text":"248"},{"range":"249","text":"235"},"Update the dependencies array to be: [fetchQuiz, props.location.state.data]",{"range":"250","text":"251"},{"range":"252","text":"238"},{"range":"253","text":"235"},"Update the dependencies array to be: [gamePin, player]",{"range":"254","text":"255"},"Update the dependencies array to be: [props.location.state.data]",{"range":"256","text":"257"},{"range":"258","text":"235"},{"range":"259","text":"235"},"Update the dependencies array to be: [gamePin, props.history]",{"range":"260","text":"261"},[996,998],"[counter]",[1563,1566],"[props, q]",[1786,1788],"[gamePin]",[1870,1872],[1029,1032],"[props.location.search, q]",[1400,1402],"[answer, gamePin]",[1735,1737],[1813,1815],[1231,1233],"[props.history]",[1497,1499],"[listQuiz]",[1847,1859],"[gamePin, listPlayer]",[1944,1946],[2306,2308],"[fetchQuiz, props.location.state.data]",[801,804],[1668,1670],[2043,2051],"[gamePin, player]",[1403,1405],"[props.location.state.data]",[1910,1912],[2587,2589],[2966,2968],"[gamePin, props.history]"]